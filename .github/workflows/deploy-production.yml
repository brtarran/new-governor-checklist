name: Deploy Production Site to GitHub Pages

on:
  push:
    branches:
      - main  # Trigger this workflow only when changes are pushed to the 'main' branch

# Sets permissions for the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the start and latest queued.
# For production, we want strict concurrency control.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single job to build and deploy the production version
  deploy-production:
    environment:
      name: github-pages/production # Use a different environment name for production
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Checks out your repository code

      - name: Setup Pages
        uses: actions/configure-pages@v5 # Configures GitHub Pages to deploy from a specific path

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # Uploads the entire repository as a deployment artifact
        with:
          path: '.' # The path to the directory containing your deployable files (your index.html is at root)
          # For production, it's common to use the default 'github-pages' artifact name
          # or a different specific name if other production artifacts exist.
          # We'll use the default here, as the PR workflow uses a unique name.
          # name: github-pages # This is the default, so it can be omitted or explicitly set.

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Deploys the uploaded artifact to GitHub Pages
        # No artifact_name needed here if using the default 'github-pages' name.
        # If you explicitly set 'name: github-pages' above, you'd put artifact_name: github-pages here.
